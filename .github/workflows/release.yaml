name: Release

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}

jobs:
  get-previous-tag:
    runs-on: ubuntu-latest
    outputs:
      previous-tag: ${{ steps.get-previous-tag.outputs.PREVIOUS_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: list tags
        run: |
          git tag

      - id: get-previous-tag
        run: |
          echo "PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^)" >> "$GITHUB_OUTPUT"

  file-changes:
    needs: [get-previous-tag]
    runs-on: ubuntu-latest
    outputs:
      file-changes-backend: ${{ steps.file-changes-api.outputs.CONTINUE }}
      file-changes-frontend: ${{ steps.file-changes-app.outputs.CONTINUE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - id: file-changes-api
        run: |
          if pnpm dlx turbo-ignore --fallback ${{ needs.get-previous-tag.outputs.previous-tag }} @thoughts/api; then
            echo "CONTINUE=0" >> "$GITHUB_OUTPUT"
          else
            echo "CONTINUE=1" >> "$GITHUB_OUTPUT"
          fi

      - id: file-changes-app
        run: |
          if pnpm dlx turbo-ignore --fallback ${{ needs.get-previous-tag.outputs.previous-tag }} @thoughts/app; then
            echo "CONTINUE=0" >> "$GITHUB_OUTPUT"
          else
            echo "CONTINUE=1" >> "$GITHUB_OUTPUT"
          fi

  push-frontend-docker-image:
    needs: [file-changes]
    runs-on: ubuntu-latest
    if: ${{ needs.file-changes.outputs.file-changes-frontend == '1' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.frontend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/thoughts-frontend:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/thoughts-frontend:latest

  push-backend-docker-image:
    needs: [file-changes]
    runs-on: ubuntu-latest
    if: ${{ needs.file-changes.outputs.file-changes-backend == '1' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/thoughts-backend:${{ github.ref_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/thoughts-backend:latest
